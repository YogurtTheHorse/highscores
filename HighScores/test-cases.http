### Create leaderboard
GET {{host}}/api/v1/leaderboards/new?orderBy=Value&direction=-1

> {%
    client.global.set("secret", response.body.secret);
    client.global.set("private_secret", response.body.privateSecret);
    client.global.set("lb", response.body.id);
%}


### Create webhook
POST {{host}}/api/v1/leaderboards/{{lb}}/{{private_secret}}/webhook
Content-Type: application/json

{
  "url": "https://localhost:3000/scores-webhook"
}


### Delete webhook
DELETE {{host}}/api/v1/leaderboards/{{lb}}/{{private_secret}}/webhook
Content-Type: application/json

### Create simple score
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/yogurt/1002/45
Content-Type: application/json


### Create simple score 2
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/kib erptah/1100/10
Content-Type: application/json


### Create simple score 3
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/iorving/900/360
Content-Type: application/json


### Create simple score 4
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/iorving/1500/90
Content-Type: application/json


### Create simple score 5
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/seryiza/2000/2000
Content-Type: application/json


### Check scores
GET {{host}}/api/v1/scores/{{lb}}/10
Content-Type: application/json


### Clear scores
DELETE {{host}}/api/v1/scores/{{lb}}/{{private_secret}}
Content-Type: application/json


### Check first 3 scores after clear
GET {{host}}/api/v1/scores/{{lb}}/3
Content-Type: application/json


### Delete seryiza score
DELETE {{host}}/api/v1/scores/{{lb}}/{{secret}}/by/seryiza
Content-Type: application/json


### Get yogurt score
GET {{host}}/api/v1/scores/{{lb}}/by/yogurt
Content-Type: application/json


### Add time to yogurt score
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/yogurt/900/3.4
Content-Type: application/json


### Check first 3 scores after delete
GET {{host}}/api/v1/scores/{{lb}}/10
Content-Type: application/json


### try to create with wrong name
POST {{host}}/api/v1/scores/{{lb}}/{{secret}}/add/фывфы/1000/
Content-Type: application/json

> {%
    client.test("bad request", function () {
        client.assert(response.status === 400, "Response status is not 400");
    })
%}



### try to access unexisted leaderboard id
GET {{host}}/api/v1/scores/9999999/10
Content-Type: application/json

> {%
    client.test("not found", function () {
        client.assert(response.status === 404, "Response status is not 404");
    })
%}